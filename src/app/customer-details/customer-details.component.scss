.header1 {
    font-size: 24px;
    font-weight: 600;
}
.header2 {
    font-size: 20px;
    font-weight: 500;
}

.header3 {
    font-size: 18px;
    font-weight: 500;
}
.has-search .form-control {
    padding-left: 2.375rem;
}

.btn-primary {
    background-color: #3ca063;
    border: #3ca063;
}

.mat-body p,
.mat-body-1 p,
.mat-typography p {
    margin: 0 0 0 0 !important;
}

/* tree Start */

.list-group-item {
    background-color: #f2f5f9;
    border: #f2f5f9;
}
.list-group-item {
    padding: 0.75rem 0;
}
.para-num {
    color: #414141;

    font-size: 28px;
    padding-bottom: 10px;
}
.para-small {
    color: #838383;
    font-size: 12px;
}
.card-1-button {
    padding: 13px 34px;
}

.btn-primary {
    color: #fff;
    background-color: #3ca063;
    border-color: #3ca063;
}
.card-overlay-thumb {
    position: absolute;
    top: -50px;
    right: 0;
    left: 0;
    // bottom: 0;
    padding: 1.25rem;
    border-radius: calc(0.25rem - 1px);
}
.card-network {
    margin: 0 auto;
}

/////////////// tree code /////////////////
/* Person */
.person {
    //border: 1px solid black;
    // padding: 10px;
    width: 144px;
    background-color: #ffffff;
    display: inline-block;
}
.right-footer {
    background-color: #c5d82c;
}
.left-footer {
    background-color: #3ca063;
}
.header5 {
    font-size: 14px;
    font-weight: bold;
    padding: 0;
    margin: 0;
}
.para5 {
    font-size: 11px;
}
.useroverly {
    position: absolute;
    top: -28px;
    left: 47px;
}
.cardpadding {
    padding-left: 0em;
    padding-right: 0em;
    padding-bottom: 7px;
    padding-top: 14px;
}

.person.female {
    border-color: #f45b69;
}

.person.male {
    border-color: #456990;
}

.person div {
    text-align: center;
}

.person .name {
    font-size: 16px;
}

.person .parentDrop,
.person .spouseDrop,
.person .childDrop {
    border: 1px dashed #000000;
    width: auto;
    min-width: 80px;
    min-height: 80px;
    display: inline-block;
    vertical-align: top;
    position: relative;
    padding-top: 15px;
}

.person .parentDrop > span,
.person .spouseDrop > span,
.person .childDrop > span {
    position: absolute;
    top: 2px;
    left: 2px;
    font-weight: bold;
}
.parentDrop > .person,
.spouseDrop > .person,
.childDrop > .person {
    margin-top: 20px;
}

/* Tree */
.tree ul {
    padding-top: 20px;
    position: relative;
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

.tree li {
    display: table-cell;
    text-align: center;
    list-style-type: none;
    position: relative;
    padding: 44px 5px 0 5px;
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}
.footericons {
    position: relative;
}
.lefticon {
    float: left;
}
.righticon {
    float: right;
}

/*We will use ::before and ::after to draw the connectors*/
.tree li::before,
.tree li::after {
    content: "";
    position: absolute;
    top: 0;
    right: 50%;
    border-top: 1px solid #ccc;
    width: 50%;
    height: 20px;
}

.tree li::after {
    right: auto;
    left: 50%;
    border-left: 1px solid #ccc;
}

/*We need to remove left-right connectors from elements without 
any siblings*/
.tree li:only-child::after,
.tree li:only-child::before {
    display: none;
}

/*Remove space from the top of single children*/
.tree li:only-child {
    padding-top: 0;
}

/*Remove left connector from first child and 
right connector from last child*/
.tree li:first-child::before,
.tree li:last-child::after {
    border: 0 none;
}
/*Adding back the vertical connector to the last nodes*/
.tree li:last-child::before {
    border-right: 1px solid #ccc;
    border-radius: 0 5px 0 0;
    -webkit-border-radius: 0 5px 0 0;
    -moz-border-radius: 0 5px 0 0;
}

.tree li:first-child::after {
    border-radius: 5px 0 0 0;
    -webkit-border-radius: 5px 0 0 0;
    -moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.tree ul ul::before {
    content: "";
    position: absolute;
    top: 0;
    left: 50%;
    border-left: 1px solid #ccc;
    width: 0;
    height: 20px;
}

.tree li .parent {
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
    margin-top: 10px;
}
.tree li .parent::before {
    content: "";
    position: absolute;
    top: 40px;
    left: 50%;
    border-left: 1px solid #ccc;
    border-right: 1px solid #ccc;
    width: 3px;
    height: 10px;
}
.tree li .family {
    position: relative;
}
.tree li .family .spouse {
    position: absolute;
    top: 0;
    left: 50%;
    margin-left: 95px;
}
.tree li .family .spouse::before {
    content: "";
    position: absolute;
    top: 50%;
    left: -10px;
    border-top: 1px solid #ccc;
    border-bottom: 1px solid #ccc;
    width: 10px;
    height: 3px;
}

/*Time for some hover effects*/
/*We will apply the hover effect the the lineage of the element also*/
.tree li .child:hover,
.tree li .child:hover + .parent .person,
.tree li .parent .person:hover,
.tree li .child:hover + .parent .person + ul li .child,
.tree li .parent .person:hover + ul li .child,
.tree li .child:hover + .parent .person + ul li .parent .person,
.tree li .parent .person:hover + ul li .parent .person {
    // background: #c8e4f8;
    color: #000;
    //   border: 1px solid #94a0b4;
}
/*Connector styles on hover*/
.tree li .child:hover + .parent::before,
.tree li .child:hover + .parent .person + ul li::after,
.tree li .parent .person:hover + ul li::after,
.tree li .child:hover + .parent .person + ul li::before,
.tree li .parent .person:hover + ul li::before,
.tree li .child:hover + .parent .person + ul::before,
.tree li .parent .person:hover + ul::before,
.tree li .child:hover + .parent .person + ul ul::before,
.tree li .parent .person:hover + ul ul::before {
    //   border-color: #94a0b4;
}

/* tree end */
